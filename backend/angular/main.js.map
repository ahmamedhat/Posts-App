{"version":3,"sources":["./src/app/posts/post-list/post-list.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post.service.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/posts/post-create/mime-type.validator.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<mat-spinner *ngIf = \"isLoading\"></mat-spinner>\r\n<mat-accordion *ngIf=\"posts.length > 0 && !isLoading\">\r\n  <mat-expansion-panel *ngFor=\"let post of posts\">\r\n    <mat-expansion-panel-header>\r\n      {{post.title}}\r\n    </mat-expansion-panel-header>\r\n    <div class=\"image-post\">\r\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\">\r\n    </div>\r\n    <p>{{post.body}}</p>\r\n    <mat-action-row *ngIf = \"isAuthenticated && userId == post.creatorId\">\r\n      <a mat-button color=\"primary\" [routerLink]=\"['/edit' , post.id]\">EDIT</a>\r\n      <button mat-button color=\"warn\" (click) = \"onDelete(post.id)\">DELETE</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n<p class=\"mat-body-1\" *ngIf=\"posts.length < 1 && !isLoading\">No Posts Yet.</p>\r\n<mat-paginator [pageSize] = 'pageSize' [pageSizeOptions] = 'pageSizeOptions' (page) = 'onPageChanged($event)' [length] = 'totalPosts'></mat-paginator>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { authService } from \"src/app/auth/auth.service\";\r\nimport { postModel } from \"../post.model\";\r\nimport { postService } from \"../post.service\";\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\n\r\nexport class postListComponent implements OnInit, OnDestroy{\r\n\r\n  constructor(private postService:postService , private authService: authService){\r\n\r\n  }\r\n\r\n  posts:postModel[] = [];\r\n  sub:Subscription;\r\n  sub2:Subscription;\r\n  isLoading = false;\r\n  pageSize = 1;\r\n  currentPage = 1;\r\n  totalPosts: number;\r\n  pageSizeOptions = [1 , 2 , 5, 10];\r\n  isAuthenticated: boolean;\r\n  userId: string;\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.isAuthenticated = this.authService.getIsAuthenticated();\r\n    this.userId = this.authService.getUserId();\r\n    this.postService.getPosts(this.pageSize , this.currentPage);\r\n    this.totalPosts = this.postService.postsCount;\r\n    this.sub = this.postService.getPostListener().subscribe((posts:postModel[]) => {\r\n      this.isLoading = false;\r\n      this.posts = posts;\r\n      this.totalPosts = this.postService.postsCount;\r\n    });\r\n    this.sub2 = this.authService.getAuthenticationStatus().subscribe(isAuthenticated => {\r\n      this.isAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postService.deletePost(postId).subscribe(() => {\r\n      this.postService.getPosts(this.currentPage , this.pageSize);\r\n      this.isLoading = false;\r\n    } , error => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onPageChanged(event: PageEvent) {\r\n    this.currentPage = event.pageIndex + 1;\r\n    this.pageSize = event.pageSize;\r\n    this.postService.getPosts(this.currentPage , this.pageSize);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.sub.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { postModel } from './post.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/posts/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class postService {\r\n  private posts: postModel[] = [];\r\n  private postsChanged = new Subject<postModel[]>();\r\n  postsCount: number;\r\n\r\n  constructor(private http: HttpClient , private router: Router) {}\r\n\r\n  getPosts(currentPage: number , pageSize: number) {\r\n    const query = `?currentPage=${currentPage}&pageSize=${pageSize}`;\r\n\r\n    this.http\r\n      .get<{ message: string; posts: any[]; postsCount:number }>(BACKEND_URL + query)\r\n      .pipe(\r\n        map((postData) => {\r\n          this.postsCount = postData.postsCount\r\n          return postData.posts.map((post) => {\r\n            return {\r\n              title: post.title,\r\n              body: post.body,\r\n              id: post._id,\r\n              imagePath: post.imagePath,\r\n              creatorId: post.creatorId\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe((transformedData) => {\r\n        this.posts = transformedData;\r\n        this.postsChanged.next([...this.posts]);\r\n      });\r\n  }\r\n\r\n  addPost(post: postModel) {\r\n    const postData = new FormData();\r\n      postData.append (\"title\" , post.title);\r\n      postData.append (\"body\" , post.body);\r\n      postData.append (\"image\" , post.imagePath , post.title);\r\n    this.http\r\n      .post<{ message: string , post: postModel }>(BACKEND_URL, postData)\r\n      .subscribe((Response) => {\r\n        this.router.navigate(['/']);\r\n        this.posts.push(post);\r\n        this.postsChanged.next([...this.posts]);\r\n      });\r\n  }\r\n\r\n  getPost (postId:string) {\r\n    return this.http.get<{title:string ; body:string ; id:string , imagePath: string , creatorId: string}>(BACKEND_URL + postId);\r\n  }\r\n\r\n  updatePost (postId:string , post: postModel , imagePath: File | string) {\r\n    let postData: postModel | FormData;\r\n    if (typeof(imagePath) === \"object\") {\r\n      postData = new FormData();\r\n      postData.append(\"title\" , post.title);\r\n      postData.append(\"id\" , postId);\r\n      postData.append(\"body\" , post.body);\r\n      postData.append(\"image\" , imagePath , post.title);\r\n    }\r\n    else {\r\n      postData = {\r\n        id: postId,\r\n        title: post.title,\r\n        body: post.body,\r\n        imagePath: imagePath,\r\n        creatorId: null\r\n      }\r\n    }\r\n    this.http.put(BACKEND_URL + postId , postData).subscribe(response => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.delete(BACKEND_URL + postId);\r\n  }\r\n\r\n  getPostListener() {\r\n    return this.postsChanged.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n  @Component({\r\n    templateUrl: './error.component.html',\r\n    styleUrls: ['./error.component.css']\r\n  })\r\n\r\n\r\nexport class errorComponent {\r\n  constructor(public dialogRef: MatDialogRef<errorComponent>,@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Error</h1>\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{data.message}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click) = \"onNoClick()\">Okay</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { authService } from './auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class authGuard implements CanActivate {\r\n  constructor(private authService: authService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuthenticated = this.authService.getIsAuthenticated();\r\n    if (!isAuthenticated) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n\r\n    return isAuthenticated;\r\n  }\r\n}\r\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form #loginForm = \"ngForm\" *ngIf=\"!isLoading\" (submit) = 'onFormSubmit(loginForm)'>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        required\n        #emailInput = \"ngModel\"\n        email\n        ngModel\n      >\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid Email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        password\n        name = \"password\"\n        #passwordInput = \"ngModel\"\n        ngModel\n      >\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid Password</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        password\n        name = \"vpassword\"\n        #passwordv = \"ngModel\"\n        ngModel\n      >\n      <mat-error *ngIf=\"passwordv.invalid\">Please enter a valid Password</mat-error>\n    </mat-form-field>\n    <button type=\"submit\" color=\"accent\" mat-raised-button *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { user } from '../auth.model';\nimport { authService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit , OnDestroy {\n\n  constructor(private authService: authService , private router: Router) { }\n\n  isLoading = false;\n  isAuthenticated: boolean;\n  isAuthenticatedSub: Subscription;\n\n  ngOnInit(): void {\n    this.isAuthenticatedSub = this.authService.getAuthenticationStatus().subscribe((isAuthenticated) => {\n      this.isAuthenticated = isAuthenticated;\n    })\n  }\n\n  onFormSubmit(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    const user: user = {...form.value};\n    this.authService.onSignup(user);\n    this.router.navigate(['/']);\n  }\n\n  ngOnDestroy() {\n    this.isAuthenticatedSub.unsubscribe();\n  }\n\n}\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { errorComponent } from \"./error/error.component\";\r\n\r\n@Injectable()\r\n\r\nexport class errorInterceptor implements HttpInterceptor {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  intercept(req: HttpRequest<any> , next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An Unknown Error has Occured';\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(errorComponent , {data: {message: errorMessage}});\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { authService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: authService) {}\n  ngOnInit() {\n    this.authService.autoAuthentication();\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { headerComponent } from './header/header.component';\nimport { postListComponent } from './posts/post-list/post-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { authInterceptor } from './auth/auth-interceptor';\nimport { errorInterceptor } from './error-interceptor';\nimport { errorComponent } from './error/error.component';\nimport { angularMaterialModule } from './angular-material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    headerComponent,\n    postListComponent,\n    LoginComponent,\n    SignupComponent,\n    errorComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    angularMaterialModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: authInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: errorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule {}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form #loginForm = \"ngForm\" *ngIf=\"!isLoading\" (submit) = 'onFormSubmit(loginForm)'>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        required\n        #emailInput = \"ngModel\"\n        email\n        ngModel\n      >\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid Email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        password\n        name = \"password\"\n        #passwordInput = \"ngModel\"\n        ngModel\n      >\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid Password</mat-error>\n    </mat-form-field>\n    <button type=\"submit\" color=\"accent\" mat-raised-button *ngIf=\"!isLoading\">Login</button>\n  </form>\n</mat-card>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { user } from '../auth.model';\nimport { authService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit , OnDestroy {\n\n  constructor(private authService: authService , private router:Router) { }\n\n  isLoading = false;\n  isAuthenticated: boolean;\n  isAuthenticatedSub: Subscription;\n\n  ngOnInit(): void {\n    this.isAuthenticatedSub = this.authService.getAuthenticationStatus().subscribe((isAuthenticated) => {\n      this.isAuthenticated = isAuthenticated;\n    })\n  }\n\n  onFormSubmit(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    const userData: user = {...form.value};\n    this.authService.onLogin(userData);\n    this.router.navigate(['/']);\n  }\n\n  ngOnDestroy() {\n    this.isAuthenticatedSub.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n  <span><a routerLink=\"\">Posts</a></span>\r\n  <ul>\r\n    <li *ngIf = \"isAuthenticated\">\r\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\"\r\n        >Create Post</a\r\n      >\r\n    </li>\r\n  </ul>\r\n  <span class=\"spacer\"></span>\r\n  <ul class=\"right-navbar-list\">\r\n    <li *ngIf= \"!isAuthenticated\">\r\n      <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\r\n    </li>\r\n    <li *ngIf= \"!isAuthenticated\">\r\n      <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\"\r\n        >Signup</a\r\n      >\r\n    </li>\r\n    <button *ngIf = \"isAuthenticated\" mat-button (click)=\"onLogout()\">Logout</button>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { authService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class headerComponent implements OnInit, OnDestroy {\r\n  isAuthenticated: boolean;\r\n  isAuthenticatedSub: Subscription;\r\n\r\n  constructor(private authService: authService , private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.isAuthenticated = this.authService.getIsAuthenticated();\r\n    this.isAuthenticatedSub = this.authService\r\n      .getAuthenticationStatus()\r\n      .subscribe((isAuthenticated) => {\r\n        this.isAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.onLogout();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isAuthenticatedSub.unsubscribe();\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === \"string\") {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = new Observable((observer: Observer<{ [key: string]: any }>) => {\r\n    fileReader.addEventListener('loadend', () => {\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0,4);\r\n      let header = '';\r\n      let isValid = false;\r\n      for (let i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n      }\r\n      switch (header) {\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false;\r\n          break;\r\n      }\r\n      if (isValid) {\r\n        observer.next(null);\r\n      }\r\n      else{\r\n        observer.next({invalidMimeType: false});\r\n      }\r\n      observer.complete();\r\n    });\r\n  fileReader.readAsArrayBuffer(file);\r\n  });\r\n  return frObs;\r\n};\r\n","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { authService } from \"./auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class authInterceptor implements HttpInterceptor {\r\n  constructor(private authService: authService) {\r\n\r\n  }\r\n  intercept(req: HttpRequest<any> , next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const clonedReq = req.clone({\r\n      headers: req.headers.set(\"Authorization\" ,\"Bearer \"+ authToken)\r\n    });\r\n    return next.handle(clonedReq);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { user } from './auth.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst  BACKEND_URL = environment.apiUrl + '/user/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class authService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private token: string;\r\n  private isAuthenticatedListener = new Subject<boolean>();\r\n  private isAuthenticated: boolean;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n\r\n  onLogin(userData: user) {\r\n    this.http\r\n      .post<{ token: string; expiresIn: number; userId: string }>(\r\n        BACKEND_URL + 'login',\r\n        userData\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this.token = response.token;\r\n          if (this.token) {\r\n            this.setExpirationDate(response.expiresIn);\r\n            this.userId = response.userId;\r\n            const now = new Date();\r\n            this.saveAuthentication(\r\n              this.token,\r\n              new Date(now.getTime() + response.expiresIn),\r\n              this.userId\r\n            );\r\n            this.isAuthenticatedListener.next(true);\r\n            this.isAuthenticated = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.isAuthenticatedListener.next(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  onSignup(userData: user) {\r\n    this.http.post(BACKEND_URL + 'signup', userData).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        this.isAuthenticatedListener.next(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.isAuthenticatedListener.next(false);\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  setExpirationDate(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.onLogout();\r\n    }, duration);\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getAuthenticationStatus() {\r\n    return this.isAuthenticatedListener.asObservable();\r\n  }\r\n\r\n  getIsAuthenticated() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  saveAuthentication(token: string, expirationDate: Date, userId: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', userId);\r\n    localStorage.setItem('expires', expirationDate.toISOString());\r\n  }\r\n\r\n  getAuthentication() {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const authenticationInfo = {\r\n      token: localStorage.getItem('token'),\r\n      expires: new Date(localStorage.getItem('expires')),\r\n      userId: localStorage.getItem('user'),\r\n    };\r\n    return authenticationInfo;\r\n  }\r\n\r\n  autoAuthentication() {\r\n    const authenticationInfo = this.getAuthentication();\r\n    if (!authenticationInfo) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const isAvailable = authenticationInfo.expires.getTime() - now.getTime();\r\n    if (isAvailable > 0) {\r\n      this.setExpirationDate(isAvailable);\r\n      this.token = authenticationInfo.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authenticationInfo.userId;\r\n      this.isAuthenticatedListener.next(true);\r\n    }\r\n  }\r\n\r\n  clearAuthData() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\n\r\nexport class angularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { authGuard } from './auth/auth.guard';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { postListComponent } from './posts/post-list/post-list.component';\n\nconst routes: Routes = [\n  {path: '' , component: postListComponent},\n  {path: 'create' , component: PostCreateComponent , canActivate: [authGuard]},\n  {path: 'edit/:postId' , component: PostCreateComponent, canActivate: [authGuard]},\n  {path: 'login' , component: LoginComponent},\n  {path: 'signup' , component: SignupComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [authGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { authService } from \"src/app/auth/auth.service\";\r\nimport { postModel } from \"../post.model\";\r\nimport { postService } from \"../post.service\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\nexport class PostCreateComponent implements OnInit , OnDestroy{\r\n  form: FormGroup;\r\n  private mode = 0;\r\n  private postId:string;\r\n  post: postModel;\r\n  isLoading = false;\r\n  imageFile: string;\r\n  authServiceSub: Subscription;\r\n\r\n\r\n  constructor(private postService:postService , private router: ActivatedRoute , private authService: authService) {\r\n\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.authServiceSub = this.authService.getAuthenticationStatus().subscribe(() => {\r\n      this.isLoading = false;\r\n    });\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null , { validators : [Validators.required , Validators.minLength(3)]}),\r\n      body: new FormControl(null , {validators: Validators.required}),\r\n      image: new FormControl(null , {validators: Validators.required , asyncValidators: mimeType})\r\n    });\r\n    this.isLoading = true;\r\n    this.router.paramMap.subscribe(paramMap => {\r\n      this.isLoading = false;\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 1;\r\n        this.postId = paramMap.get('postId');\r\n        this.postService.getPost(this.postId).subscribe(post => {\r\n          this.post = post;\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            body: this.post.body,\r\n            image: this.post.imagePath\r\n          });\r\n        });\r\n      }\r\n      else {\r\n        this.mode = 0;\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpload(event: Event){\r\n    if (!(event.target as HTMLInputElement).files[0]) {\r\n      return;\r\n    }\r\n    const image = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({\r\n      image: image\r\n    });\r\n    this.form.updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imageFile = (reader.result as string);\r\n    };\r\n    reader.readAsDataURL(image);\r\n  }\r\n\r\n  onSavePost(){\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.mode === 0) {\r\n      const post:postModel = {id: null , title: this.form.value.title , body: this.form.value.body , imagePath: this.form.value.image , creatorId: null};\r\n      this.postService.addPost(post);\r\n    }\r\n    else {\r\n      const post:postModel = {id: this.postId , title: this.form.value.title , body: this.form.value.body , imagePath: this.form.value.image  , creatorId: null};\r\n      this.postService.updatePost(this.postId , post , this.form.value.image);\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.form.reset();\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 2500);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authServiceSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup] = \"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        placeholder=\"Post Title\"\r\n        formControlName = \"title\"\r\n      >\r\n      <mat-error *ngIf=\"form.get('title').invalid\">You must enter a title</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <textarea\r\n        matInput\r\n        rows=\"5\"\r\n        placeholder=\"Post Body\"\r\n        formControlName = \"body\"\r\n      ></textarea>\r\n      <mat-error *ngIf=\"form.get('body').invalid\">You must enter a body</mat-error>\r\n    </mat-form-field>\r\n    <div>\r\n      <button mat-stroked-button type=\"button\" (click)=\"inputButton.click()\">\r\n        Add Image\r\n      </button>\r\n      <input type=\"file\" #inputButton (change)=\"onUpload($event)\">\r\n    </div>\r\n    <div class=\"image-container\" *ngIf=\"imageFile !== '' && imageFile && form.valid\">\r\n      <img [src]=\"imageFile\" [alt]=\"form.value.title\">\r\n    </div>\r\n    <button type=\"submit\" color=\"accent\" mat-raised-button>Save</button>\r\n  </form>\r\n</mat-card>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}